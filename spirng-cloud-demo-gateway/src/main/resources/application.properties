server.port = 5557
spring.application.name = spring-cloud-demo-gateway-service
spring.cloud.gateway.discovery.locator.enabled = true
spring.http.multipart.max-request-size = 100Mb
spring.http.multipart.max-file-size = 10Mb
ribbon.ConnectTimeout = 5000
ribbon.ReadTimeout = 5000
hystrix.command.default.execution.timeout.enabled = false
eureka.client.healthCheck.enabled = true
eureka.client.serviceUrl.defaultZone = http://127.0.0.1:8761/eureka/
eureka.instance.preferIpAddress = true
eureka.instance.instance-id = ${spring.cloud.client.ip-address}:${server.port}
eureka.instance.prefer-ip-address = true
spring.cloud.nacos.discovery.enabled = false

#路由配置
#转跳的服务器的spring.application.name
spring.cloud.gateway.routes[0].id = spring-cloud-demo-consumer
#转跳的服务器的uri
spring.cloud.gateway.routes[0].uri = lb://spring-cloud-demo-consumer
#转跳的服务的url的前缀，一定要有这个属性
spring.cloud.gateway.routes[0].predicates[0] = Path=/spring-cloud-consumer/**
spring.cloud.gateway.routes[0].filters[0].name = RequestRateLimiter
#用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
spring.cloud.gateway.routes[0].filters[0].args.key-resolver=#{@apiKeyResolver}
#令牌桶每秒填充平均速率
spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.replenishRate=1
#令牌桶总容量
spring.cloud.gateway.routes[0].filters[0].args.redis-rate-limiter.burstCapacity=1

spring.cloud.gateway.routes[1].id = spring-cloud-demo-provider
spring.cloud.gateway.routes[1].uri = lb://spring-cloud-demo-provider
spring.cloud.gateway.routes[1].predicates[0] = Path=/spring-cloud-provider/**



#redis配置
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
# Redis 服务器连接密码（默认为空）
spring.redis.password=123456
# springboot 2.0 redis默认客户端已换成lettuce

# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
spring.redis.timeout=5000